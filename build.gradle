plugins {
    id "dev.architectury.loom" version "1.5-SNAPSHOT"
    id "maven-publish"
}

repositories {
    maven {
        url "https://repo.velocitypowered.com/snapshots/"
    }

    maven {
        url "https://maven.neoforged.net/releases/"
    }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

base {
    archivesName = project.archives_base_name
    version = project.mod_version
    group = project.maven_group
}

loom {
    forge {
        mixinConfigs = [
                "krypton.mixins.json"
        ]

        dataGen {
            mod project.mod_id
        }
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.neoforged:forge:${project. minecraft_version}-${project.forge_version}"

    modImplementation forgeRuntimeLibrary include  "com.velocitypowered:velocity-native:3.2.0-SNAPSHOT"
}



processResources {
    inputs.property "version", project.version
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

remapJar {
    dependsOn(shadowJar)
    input = shadowJar.archiveFile
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {}
}
